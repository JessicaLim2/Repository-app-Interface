managed with additional save implementation in class ZBP_I_INTEGRATIONPATTERNV_S unique;
strict;
with draft;

define behavior for ZI_IntegrationPatternV_S alias IntegrationPatteAll
draft table ZDT_INTEGPAT_D_S
with unmanaged save
lock master total etag LastChangedAtMax
authorization master( global )

{
  field ( readonly )
   SingletonID;


  update;
  internal create;
  internal delete;

  draft action ( features : instance ) Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;
  action ( features : instance ) SelectCustomizingTransptReq parameter D_SelectCustomizingTransptReqP result [1] $self;

  association _IntegrationPatternV { create ( features : instance ); with draft; }
}

define behavior for ZI_IntegrationPatternV alias IntegrationPatternV
persistent table ZDT_INTEGPAT_REP
draft table ZDT_INTEGPAT_R_D
etag master LocalLastChangedAt
lock dependent by _IntegrationPatteAll
authorization dependent by _IntegrationPatteAll

{
  field ( mandatory : create )
   IntegrationSty,
   IntegrationPat;

  field ( readonly )
   SingletonID,
   LastChangedAt,
   LocalLastChangedAt;

  field ( readonly : update )
   IntegrationSty,
   IntegrationPat;


  update( features : global );
  delete( features : global );

  mapping for ZDT_INTEGPAT_REP
  {
    IntegrationSty = INTEGRATION_STY;
    IntegrationPat = INTEGRATION_PAT;
    PatternDesc = PATTERN_DESC;
    PatternExample = PATTERN_EXAMPLE;
    LastChangedAt = LAST_CHANGED_AT;
    LocalLastChangedAt = LOCAL_LAST_CHANGED_AT;
  }

  association _IntegrationPatteAll { with draft; }

  validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; delete; }
}